{"version":3,"sources":["chef.png","recipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Recipelistcontainer","styled","div","Recipecontainer","Coverimg","img","Recipename","span","Ingredients","See","Placeholder","RecipeComponent","props","React","useState","show","setshow","recipeobj","Dialog","open","DialogTitle","id","DialogContent","ingredients","map","ingredientobj","text","weight","DialogActions","onClick","window","url","src","image","label","Recipe","timeoutId","updateTimeoutId","list","updatelist","fetchRecipe","searchstring","a","axios","get","response","data","hits","className","logo","alt","type","placeholder","onChange","event","clearTimeout","timeout","setTimeout","target","value","length","recipe","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,MAA0B,iC,4DCSnCA,EAAoBC,IAAOC,IAAR,0IASnBC,EAAgBF,IAAOC,IAAR,sKAWfE,EAASH,IAAOI,IAAR,4CAKRC,EAAWL,IAAOM,KAAR,4GAQVC,EAAYP,IAAOM,KAAR,gMAYXE,EAAIR,IAAOM,KAAR,4NAaHG,EAAYT,IAAOI,IAAR,sGAQXM,EAAkB,SAACC,GACrB,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAYL,EAAZK,UACX,OACI,qCACD,eAAEC,EAAA,EAAF,CAASC,KAAMJ,EAAf,UACA,cAACK,EAAA,EAAD,CAAaC,GAAG,qBAAhB,yBACA,cAACC,EAAA,EAAD,UACA,kCACS,kCACE,4CACA,2CAEF,gCACGL,EAAUM,YAAYC,KAAI,SAACC,GAAD,OAC7B,+BACM,6BAAKA,EAAcC,OACnB,6BAAKD,EAAcE,sBAKhC,eAACC,EAAA,EAAD,WACD,cAACnB,EAAD,CAAKF,MAAI,EAACsB,QAAS,kBAAKC,OAAOX,KAAKF,EAAUc,MAA9C,sBACA,cAACvB,EAAD,CAAaD,MAAI,EAAEsB,QAAS,kBAAKb,EAAQ,KAAzC,yBAGA,eAACb,EAAD,WACA,cAACC,EAAD,CAAU4B,IAAKf,EAAUgB,QACzB,cAAC3B,EAAD,CAAYC,MAAI,EAAhB,SAAkBU,EAAUiB,QAC5B,cAAC1B,EAAD,CAAaD,MAAI,EAAEsB,QAAS,kBAAKb,GAAQ,IAAzC,yBACA,cAACP,EAAD,CAAKF,MAAI,EAACsB,QAAS,kBAAKC,OAAOX,KAAKF,EAAUc,MAA9C,wCA+CWI,MA1Cf,WAEA,MAAkCrB,qBAAlC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAAwBvB,mBAAS,IAAjC,mBAAOwB,EAAP,KAAYC,EAAZ,KAQMC,EAAW,uCAAC,WAAMC,GAAN,eAAAC,EAAA,sEACOC,IAAMC,IAAN,0CAA6CH,EAA7C,8DADP,OACTI,EADS,OAEfN,EAAWM,EAASC,KAAKC,MAFV,2CAAD,sDAKb,OACJ,gCACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAMhB,IAAKiB,EAAMC,IAAI,KACpC,sBAAKF,UAAU,OAAf,eACN,oBAAIA,UAAU,OAAd,oBADM,YAGA,uBAAOA,UAAU,SAASG,KAAK,OAAOC,YAAY,sCAAsCC,SAnBlF,SAACC,GAEXC,aAAanB,GACb,IAAMoB,EAAQC,YAAY,kBAAMjB,EAAYc,EAAMI,OAAOC,SAAQ,KACjEtB,EAAgBmB,SAiBpB,qBAAKR,UAAU,SAAf,SAEA,cAAChD,EAAD,UAEQsC,EAAKsB,OAAUtB,EAAKd,KAAI,SAACP,GAAD,OAExB,cAAC,EAAD,CAAiBA,UAAWA,EAAU4C,YAGlC,cAACnD,EAAD,CAAasB,IAAI,gGAAgGkB,IAAI,aCtIlHY,MARf,WACE,OACE,8BACF,cAAC,EAAD,OCMaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d31c589.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chef.c113579c.png\";","import React,{useState} from \"react\";\r\n import styled from \"styled-components\"; \r\nimport logo from \"./chef.png\";\r\nimport axios from \"axios\";\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nconst Recipelistcontainer=styled.div\r\n`\r\ndisplay:flex;\r\nflex-direction:row;\r\nflex-wrap:wrap;\r\npadding:80px;\r\ngap:40px;\r\njustify-content:space-evenly;\r\n`;\r\nconst Recipecontainer=styled.div\r\n`\r\ndisplay:flex;\r\nflex-direction:column;\r\npadding:10px;\r\nbackground-color:white;\r\ncolor:black;\r\nwidth:300px;\r\nbox-shadow: 0 3px 6px 0 #aaa;\r\n`;\r\n\r\nconst Coverimg=styled.img\r\n`\r\nheight:200px\r\n\r\n`;\r\nconst Recipename=styled.span\r\n`\r\nfont-size:18px;\r\nfont-weight:bold;\r\nfont-family:sans-serif;\r\nmargin: 10px 0;\r\n\r\n`;\r\nconst Ingredients=styled.span\r\n`\r\nfont-size:18px;\r\nborder:2px solid #66DE93;\r\nfont-family:sans-serif;\r\n\r\npadding:10px 15px;\r\nborder-radius:4px;\r\ncolor:#3A6351;\r\ntext-align:center;\r\ncursor:pointer;\r\n`;\r\nconst See=styled.span\r\n`\r\nfont-size:18px;\r\nborder:2px solid red;\r\nfont-family:sans-serif;\r\nmargin: 10px 0;\r\npadding:10px 15px;\r\nborder-radius:4px;\r\ncolor:red;\r\ntext-align:center;\r\nmargin-bottom:12px;\r\ncursor:pointer;\r\n`;\r\nconst Placeholder=styled.img\r\n`\r\nheight:200px;\r\nwidth:300px;\r\nopacity:60%;\r\nbox-shadow: 0 3px 6px 0 #aaa;\r\n`;\r\n\r\nconst RecipeComponent = (props) =>{\r\n    const [show, setshow] = React.useState(false);\r\n    const{ recipeobj }=props;\r\nreturn (\r\n    <>\r\n   < Dialog open={show}  >\r\n   <DialogTitle id=\"alert-dialog-title\">Ingredients</DialogTitle>\r\n   <DialogContent>\r\n   <table>\r\n            <thead>\r\n              <th>Ingredient</th>\r\n              <th>Weight</th>\r\n            </thead>\r\n            <tbody>\r\n              {recipeobj.ingredients.map((ingredientobj) => (\r\n            <tr>\r\n                  <td>{ingredientobj.text}</td>\r\n                  <td>{ingredientobj.weight}</td>\r\n                </tr>))}\r\n                </tbody>\r\n    </table>\r\n       </DialogContent>\r\n     <DialogActions>\r\n    <See span onClick={() =>window.open(recipeobj.url)}>See More</See>\r\n    <Ingredients span  onClick={() =>setshow(\"\")}>Close</Ingredients>\r\n     </DialogActions>\r\n   </Dialog>\r\n    <Recipecontainer>\r\n    <Coverimg src={recipeobj.image} />\r\n    <Recipename span>{recipeobj.label}</Recipename>\r\n    <Ingredients span  onClick={() =>setshow(true)}>Ingredients</Ingredients>\r\n    <See span onClick={() =>window.open(recipeobj.url)}>See Complete Recipe</See>\r\n</Recipecontainer>\r\n</>\r\n        );\r\n}\r\nfunction Recipe()\r\n{\r\nconst [timeoutId,updateTimeoutId]=useState( );\r\nconst [list,updatelist]=useState([]);\r\nconst display=(event) => {\r\n\r\n    clearTimeout(timeoutId);\r\n    const timeout=setTimeout( () => fetchRecipe(event.target.value) ,500);\r\n    updateTimeoutId(timeout);\r\n}\r\n\r\nconst fetchRecipe=async(searchstring) => {\r\n   const response= await axios.get(`https://api.edamam.com/search?q=${searchstring}&app_id=a133a7ab&app_key=b9019dbe3f17a19b767c6325ab521340`);\r\n   updatelist(response.data.hits);\r\n   \r\n};\r\n    return(\r\n<div>\r\n    <div className=\"max\">\r\n        <img className=\"top\" src={logo} alt=\"\" />\r\n        <div className=\"text\">\r\nMy<h1 className=\"head\">Recipe</h1>Finder\r\n        </div>\r\n        <input className=\"input1\" type=\"text\" placeholder=\"search ur favourite recipe.........\" onChange={display} />\r\n    </div>\r\n<div className=\"bottom\">\r\n\r\n<Recipelistcontainer>\r\n    {\r\n        list.length? ( list.map((recipeobj) =>\r\n       (\r\n        <RecipeComponent recipeobj={recipeobj.recipe} />\r\n       ) )\r\n        ) :(\r\n            <Placeholder src=\"https://falafelandcaviar.com/wp-content/uploads/2019/09/adam-smotkin-nv3lL1MzOto-unsplash.jpg\" alt=\"\" />\r\n        )\r\n    }\r\n</Recipelistcontainer>\r\n</div>\r\n</div>\r\n    );\r\n}\r\nexport default Recipe;","\nimport './recipe.css';\nimport Recipe from './recipe';\nfunction App() {\n  return (\n    <div >\n  <Recipe />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}